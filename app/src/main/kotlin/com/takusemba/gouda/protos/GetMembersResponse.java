// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: members.proto
package com.takusemba.gouda.protos;

import com.squareup.wire.FieldEncoding;
import com.squareup.wire.Message;
import com.squareup.wire.ProtoAdapter;
import com.squareup.wire.ProtoReader;
import com.squareup.wire.ProtoWriter;
import com.squareup.wire.WireField;
import com.squareup.wire.internal.Internal;
import java.io.IOException;
import java.lang.Object;
import java.lang.Override;
import java.lang.String;
import java.lang.StringBuilder;
import java.util.List;
import okio.ByteString;

public final class GetMembersResponse extends Message<GetMembersResponse, GetMembersResponse.Builder> {
  public static final ProtoAdapter<GetMembersResponse> ADAPTER = new ProtoAdapter_GetMembersResponse();

  private static final long serialVersionUID = 0L;

  @WireField(
      tag = 1,
      adapter = "com.takusemba.gouda.protos.Member#ADAPTER",
      label = WireField.Label.REPEATED
  )
  public final List<Member> members;

  public GetMembersResponse(List<Member> members) {
    this(members, ByteString.EMPTY);
  }

  public GetMembersResponse(List<Member> members, ByteString unknownFields) {
    super(ADAPTER, unknownFields);
    this.members = Internal.immutableCopyOf("members", members);
  }

  @Override
  public Builder newBuilder() {
    Builder builder = new Builder();
    builder.members = Internal.copyOf("members", members);
    builder.addUnknownFields(unknownFields());
    return builder;
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof GetMembersResponse)) return false;
    GetMembersResponse o = (GetMembersResponse) other;
    return unknownFields().equals(o.unknownFields())
        && members.equals(o.members);
  }

  @Override
  public int hashCode() {
    int result = super.hashCode;
    if (result == 0) {
      result = unknownFields().hashCode();
      result = result * 37 + members.hashCode();
      super.hashCode = result;
    }
    return result;
  }

  @Override
  public String toString() {
    StringBuilder builder = new StringBuilder();
    if (!members.isEmpty()) builder.append(", members=").append(members);
    return builder.replace(0, 2, "GetMembersResponse{").append('}').toString();
  }

  public static final class Builder extends Message.Builder<GetMembersResponse, Builder> {
    public List<Member> members;

    public Builder() {
      members = Internal.newMutableList();
    }

    public Builder members(List<Member> members) {
      Internal.checkElementsNotNull(members);
      this.members = members;
      return this;
    }

    @Override
    public GetMembersResponse build() {
      return new GetMembersResponse(members, super.buildUnknownFields());
    }
  }

  private static final class ProtoAdapter_GetMembersResponse extends ProtoAdapter<GetMembersResponse> {
    public ProtoAdapter_GetMembersResponse() {
      super(FieldEncoding.LENGTH_DELIMITED, GetMembersResponse.class);
    }

    @Override
    public int encodedSize(GetMembersResponse value) {
      return Member.ADAPTER.asRepeated().encodedSizeWithTag(1, value.members)
          + value.unknownFields().size();
    }

    @Override
    public void encode(ProtoWriter writer, GetMembersResponse value) throws IOException {
      Member.ADAPTER.asRepeated().encodeWithTag(writer, 1, value.members);
      writer.writeBytes(value.unknownFields());
    }

    @Override
    public GetMembersResponse decode(ProtoReader reader) throws IOException {
      Builder builder = new Builder();
      long token = reader.beginMessage();
      for (int tag; (tag = reader.nextTag()) != -1;) {
        switch (tag) {
          case 1: builder.members.add(Member.ADAPTER.decode(reader)); break;
          default: {
            FieldEncoding fieldEncoding = reader.peekFieldEncoding();
            Object value = fieldEncoding.rawProtoAdapter().decode(reader);
            builder.addUnknownField(tag, fieldEncoding, value);
          }
        }
      }
      reader.endMessage(token);
      return builder.build();
    }

    @Override
    public GetMembersResponse redact(GetMembersResponse value) {
      Builder builder = value.newBuilder();
      Internal.redactElements(builder.members, Member.ADAPTER);
      builder.clearUnknownFields();
      return builder.build();
    }
  }
}
